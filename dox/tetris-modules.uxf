<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>30</x>
      <y>410</y>
      <w>150</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>main
--
--
main
main_turbo
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>300</y>
      <w>150</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>io
--
--
load_picture</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>30</x>
      <y>30</y>
      <w>150</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>datatypes.h
--
palette
image
input_event_data
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>160</x>
      <y>140</y>
      <w>230</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;10.0;210.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>90</x>
      <y>220</y>
      <w>30</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>170</x>
      <y>490</y>
      <w>210</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;90.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>490</y>
      <w>250</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>230.0;10.0;230.0;90.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>530</x>
      <y>490</y>
      <w>280</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>260.0;10.0;260.0;90.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>590</x>
      <y>140</y>
      <w>260</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;10.0;240.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>140</y>
      <w>260</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;240.0;10.0;240.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>300</y>
      <w>150</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>input
--
--
add_input_handler</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>300</y>
      <w>150</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>view
--
--
open_view</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>30</x>
      <y>640</y>
      <w>260</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>main_turbo

action_state[left,right,up,down,fire]
commands[exit, restart]

while(TRUE) {
  while(msg = GetMsg(iport)) {
    if command
      return command;
    update action
  }
  ts = GetSysTime()
  render_frame(ts, input_state)
  WaitTOF();
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>690</x>
      <y>640</y>
      <w>140</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Level
--
Speed (penalty)
Bonus (reward)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>640</y>
      <w>190</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Gamestat
--
Hiscore, persisted
Score
Level
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>760</y>
      <w>140</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Playground
--
rows
columns
grid [rows, colums]
cell blocktype[x]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>760</y>
      <w>160</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Tetramino
--
blocktype[x]
location (row, column)
orientation (0, 3)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>850</x>
      <y>640</y>
      <w>540</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>render

render updates only, not the entire screen
bg image is 4 bitplanes, the rest the 5th?
(sprites palette is from 17-32)

init(bg image, game data)

render_frame(input_state) {
	check if it's time to move or rotate the tetramino
	current_ts - prev_ts vs Speed (see Level)
	check collision -&gt; update grid
	check rows if filled -&gt; removal animation + update grid
}

:figure out:
active tetramino -&gt; sprites
filled cells -&gt; bobs
dual playfield</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>640</y>
      <w>140</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Rules
--
score to level map</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
